DRYDOCK, CHANGES

#### 0.6.9 (2010-02-12) #############################

* CHANGE: Removed hanna dependency [Flameeyes]
* CHANGE: Using autoload where appropriate.


#### 0.6.8 (2009-09-15) #############################

* FIXED: require 'thread' added to Drydock::Screen
* FIXED: require 'drydock/console'


#### 0.6.7 (2009-09-15) #############################

* ADDED: Drydock::Screen

#### 0.6.6 (2009-06-24) #############################

NOTE: Because at_exit has been removed, Drydock scripts will no longer
run automatically. You can explicitly call the following at the bottom
of your scripts:
    
    Drydock.run!(ARGV, STDIN) if Drydock.run?

* CHANGE: Removed at_exit 
* CHANGE: Drydock.run? will now return false if Drydock hasl already run


#### 0.6.5 (2009-05-21) #############################

* ADDED: "with_args" support for default command. When specified, 
arguments can be passed to the default command with run in the 
short form. e.g. "script arg1 arg2" == "script cmdname arg1 arg2"

#### 0.6.3 (2009-05-10) #############################

* ADDED: show-commands now displays a note about which command is the default
* CHANGE: Moved mixins to lib/drydock/mixins (so other projects can require 'drydock/mixins')
* FIXED: Support for inline command aliases when specifying a class: 
command [:name, :alias1, :alias2] => SomeClass


#### 0.6.2 (2009-05-07) #############################

* ADDED: drydock/console.rb to start a new wing in the drydock
* ADDED: mixins for String and Object (for Console)


#### 0.6.1 (2009-05-03) #############################

* FIXED: @@trawler raises an error in Ruby 1.8 if it's a Symbol


#### 0.6.0 (2009-04-30) #############################

* CHANGE: Cleaner default error message for UnknownCommand exceptions
* CHANGE: 'desc' is now 'about' (desc works, but it prints a notice)
* CHANGE: I now recommend implementing the Drydock DSL in a module.
bin/example was updated to reflect the change. This prevents Drydock
keywords from being included in the global namespace. 
* ADDED: Inline commands aliases. command :cmd1, :cmd2 do; ...; end
* ADDED: Unknown commands can be directed to a trawler. 


#### 0.5.6 (2009-04-22) #############################

* CHANGED: Interrupts now handled in rescue rather than a trap. 
* ADDED: Drydock::ArgError and Drydock::OptError are rescued at runtime by default

#### 0.5.5 (2009-04-19) #############################

* CHANGED: Improved help screen formatting. 

#### 0.5.4 (2009-04-15) #############################

* ADDED: Better error handling with new Drydock::ArgError and Drydock::OptError

#### 0.5.3 (2009-04-05) #############################

* FIXED: Command actions were not being handled correctly. Added rdocs to 
clarify the code.

#### 0.5.2 (2009-04-04) #############################

* ADDED: before and after blocks now receive a primed reference to the 
command object (which gives them access to the globals and options)
* CHANGE: The prep stuff in Drydock::Command#call is now split into a
separate method: prepare so call no longer takes arguments. 
* FIXED: Drydock#capture_io was using yield. It now accepts a block instead. 


#### 0.5.1 (2009-03-15) #############################

* FIXED: Prevent calling default command in at_exit when there's a LoadError.
* FIXED: Exit gracefully when the application exits. 
* FIXED: Print command names with dashes rather than underscores


#### 0.5 (2009-03-11) ###############################

* ADDED: Checks that the command class is a subclass of Drydock::Command
* CHANGE: Cleaned up show-commands screen
* FIXED: Help didn't work when using command alias
* ADDED: Named argv values.
* CHANGE: argv are now part of the Command class (not passed to command blocks)
* CHANGE: "project" now automatically requires the lowercase name of the project
and gracefully continues if the require failed. 
* CHANGE: Drydock will look for different validation method, based on the method 
being executed. If a validation method is found it's executed and
must return a true valid (it can also raise its own exceptions).
* ADDED: command actions. These are boolean switches with a twist. Drydock looks
for command_action or action_command methods. Saves checking the switches
and sending to other methods manually.


#### 0.4 (2009-02-28) ###############################

* FIXED: "interning empty string" error when bare "option" is used
* ADDED: Calls valid? method (if present) before calling command block.
* ADDED: "capture" method. Auto capture STDOUT to obj.stdout etc...
* ADDED: Automatically calls init and print_header methods before the command
       and print_footer after the command (if available)
* ADDED: Tries to call obj.command if available when no block is supplied
* ADDED: "show_commands" command built-in. Displays commands with descriptions
* ADDED: A default usage help msg for every command: "#{$0} command-name"
* ADDED: "usage" work multiple times for the same command. 
* ADDED: "desc" method for per command descriptions
* CHANGE: options are now stored as obj.option.name instead of obj.name
* CHANGE: global options are now stored as obj.globals.name
* CHANGE: removed auto importing methods
    OLD: require 'drydock'
    ADDED: require 'drydock'
         extend Drydock


#### 0.3.3 (2009-02-14) ###############################

* ADDED: init method hook for subclasses of Drydock::Command
* UPDATED: Rdocs
* CHANGE: added method command_aliaz to mirror aliaz_command


#### 0.3 (2009-02-05) ###############################

* Added support for custom Drydock::Commands objects
* Global and command-specific options are now available as 
  attributes of the Drydock::Commands class instance.
* Automatic execution
* Now in a single file (lib/drydock.rb)
* Started adding tests
* Improved documentation


#### 0.2 (2008-12-27) ###############################

* Initial release
* Forked from bmizerany/frylock


