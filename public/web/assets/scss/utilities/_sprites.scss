$arrow-sprite: (31px, 64px, -31px, -64px, 31px, 32px, 135px, 101px, '../images/sprite.png', 'arrow', );
$cmd-sprite: (108px, 0px, -108px, 0px, 27px, 27px, 135px, 101px, '../images/sprite.png', 'cmd', );
$copy-sprite: (77px, 0px, -77px, 0px, 29px, 38px, 135px, 101px, '../images/sprite.png', 'copy', );
$info-link-sprite: (64px, 64px, -64px, -64px, 29px, 29px, 135px, 101px, '../images/sprite.png', 'info-link', );
$logo-sprite: (0px, 0px, 0px, 0px, 75px, 62px, 135px, 101px, '../images/sprite.png', 'logo', );
$orange-arrow-sprite: (108px, 50px, -108px, -50px, 20px, 13px, 135px, 101px, '../images/sprite.png', 'orange-arrow', );
$paste-sprite: (0px, 64px, 0px, -64px, 29px, 37px, 135px, 101px, '../images/sprite.png', 'paste', );
$questionmark-sprite: (108px, 29px, -108px, -29px, 19px, 19px, 135px, 101px, '../images/sprite.png', 'questionmark', );
$arrow-2x-sprite: (62px, 126px, -62px, -126px, 62px, 63px, 266px, 200px, '../images/sprite@2x.png', 'arrow@2x', );
$cmd-2x-sprite: (214px, 0px, -214px, 0px, 52px, 52px, 266px, 200px, '../images/sprite@2x.png', 'cmd@2x', );
$copy-2x-sprite: (152px, 0px, -152px, 0px, 58px, 74px, 266px, 200px, '../images/sprite@2x.png', 'copy@2x', );
$info-link-2x-sprite: (128px, 126px, -128px, -126px, 56px, 56px, 266px, 200px, '../images/sprite@2x.png', 'info-link@2x', );
$logo-2x-sprite: (0px, 0px, 0px, 0px, 148px, 122px, 266px, 200px, '../images/sprite@2x.png', 'logo@2x', );
$orange-arrow-2x-sprite: (214px, 98px, -214px, -98px, 39px, 25px, 266px, 200px, '../images/sprite@2x.png', 'orange-arrow@2x', );
$paste-2x-sprite: (0px, 126px, 0px, -126px, 58px, 74px, 266px, 200px, '../images/sprite@2x.png', 'paste@2x', );
$questionmark-2x-sprite: (214px, 56px, -214px, -56px, 38px, 38px, 266px, 200px, '../images/sprite@2x.png', 'questionmark@2x', );
$spritesheet-width: 135px;
$spritesheet-height: 101px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($arrow-sprite, $cmd-sprite, $copy-sprite, $info-link-sprite, $logo-sprite, $orange-arrow-sprite, $paste-sprite, $questionmark-sprite, );
$spritesheet: (135px, 101px, '../images/sprite.png', $spritesheet-sprites, );
$retina-spritesheet-width: 266px;
$retina-spritesheet-height: 200px;
$retina-spritesheet-image: '../images/sprite@2x.png';
$retina-spritesheet-sprites: ($arrow-2x-sprite, $cmd-2x-sprite, $copy-2x-sprite, $info-link-2x-sprite, $logo-2x-sprite, $orange-arrow-2x-sprite, $paste-2x-sprite, $questionmark-2x-sprite, );
$retina-spritesheet: (266px, 200px, '../images/sprite@2x.png', $retina-spritesheet-sprites, );

/*
These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.

The list formatted variables are intended for mixins like `retina-sprite` and `retina-sprites`.
*/
$arrow-group-name: 'arrow';
$arrow: ('arrow', $arrow-sprite, $arrow-2x-sprite, );
$cmd-group-name: 'cmd';
$cmd: ('cmd', $cmd-sprite, $cmd-2x-sprite, );
$copy-group-name: 'copy';
$copy: ('copy', $copy-sprite, $copy-2x-sprite, );
$info-link-group-name: 'info-link';
$info-link: ('info-link', $info-link-sprite, $info-link-2x-sprite, );
$logo-group-name: 'logo';
$logo: ('logo', $logo-sprite, $logo-2x-sprite, );
$orange-arrow-group-name: 'orange-arrow';
$orange-arrow: ('orange-arrow', $orange-arrow-sprite, $orange-arrow-2x-sprite, );
$paste-group-name: 'paste';
$paste: ('paste', $paste-sprite, $paste-2x-sprite, );
$questionmark-group-name: 'questionmark';
$questionmark: ('questionmark', $questionmark-sprite, $questionmark-2x-sprite, );
$retina-groups: ($arrow, $cmd, $copy, $info-link, $logo, $orange-arrow, $paste, $questionmark, );

@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `retina-sprite` mixin sets up rules and a media query for a sprite/retina sprite.
  It should be used with a "retina group" variable.

The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/

$icon-home-group: ('icon-home', $icon-home, $icon-home-2x, );

.icon-home {
  @include retina-sprite($icon-home-group);
}
*/
@mixin sprite-background-size($sprite) {
  $sprite-total-width: nth($sprite, 7);
  $sprite-total-height: nth($sprite, 8);
  background-size: $sprite-total-width $sprite-total-height;
}

@mixin retina-sprite($retina-group) {
  $normal-sprite: nth($retina-group, 2);
  $retina-sprite: nth($retina-group, 3);
  @include sprite($normal-sprite);

  @media (-webkit-min-device-pixel-ratio: 2),
         (min-resolution: 192dpi) {
    @include sprite-image($retina-sprite);
    @include sprite-background-size($normal-sprite);
  }
}


/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}

/*
The `retina-sprites` mixin generates a CSS rule and media query for retina groups
  This yields the same output as CSS retina template but can be overridden in SCSS

@include retina-sprites($retina-groups);
*/
@mixin retina-sprites($retina-groups) {
  @each $retina-group in $retina-groups {
    $sprite-name: nth($retina-group, 1);
    .#{$sprite-name} {
      @include retina-sprite($retina-group);
    }
  }
}

// The base class for all sprites
.sprite {
  content: " ";
  display: inline-block;
  vertical-align: middle;
  overflow: hidden;
  background-image: url($spritesheet-image);
  text-indent: -9999px;

  @media (-webkit-min-device-pixel-ratio: 2),
         (min-resolution: 192dpi) {
    $sprite-total-width: nth($spritesheet, 1);
    $sprite-total-height: nth($spritesheet, 2);
    background-image: url($retina-spritesheet-image);
    background-size: $sprite-total-width $sprite-total-height;
  }
}

.sprite.arrow {
  $sprite: nth($arrow, 2); @include sprite-position($sprite); @include sprite-width($sprite); @include sprite-height($sprite);
}
.sprite.cmd {
  $sprite: nth($cmd, 2); @include sprite-position($sprite); @include sprite-width($sprite); @include sprite-height($sprite);
}
.sprite.copy {
  $sprite: nth($copy, 2); @include sprite-position($sprite); @include sprite-width($sprite); @include sprite-height($sprite);
}
.sprite.info-link {
  $sprite: nth($info-link, 2); @include sprite-position($sprite); @include sprite-width($sprite); @include sprite-height($sprite);
}
.sprite.logo {
  $sprite: nth($logo, 2); @include sprite-position($sprite); @include sprite-width($sprite); @include sprite-height($sprite);
}
.sprite.orange-arrow {
  $sprite: nth($orange-arrow, 2); @include sprite-position($sprite); @include sprite-width($sprite); @include sprite-height($sprite);
}
.sprite.paste {
  $sprite: nth($paste, 2); @include sprite-position($sprite); @include sprite-width($sprite); @include sprite-height($sprite);
}
.sprite.questionmark {
  $sprite: nth($questionmark, 2); @include sprite-position($sprite); @include sprite-width($sprite); @include sprite-height($sprite);
}
